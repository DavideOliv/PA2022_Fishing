services:
  redis:
    container_name: redis
    hostname: redis
    image: redis
    ports:
      - 6379:6379
    logging:
      driver: none

  redis-commander:
    container_name: redis-commander
    hostname: redis-commander
    image: rediscommander/redis-commander:latest
    restart: always
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - 8081:8081
    logging:
      driver: none

  mongo:
    image: mongo
    container_name: pa-mongo
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$MONGODB_ADMINUSERNAME
      - MONGO_INITDB_ROOT_PASSWORD=$MONGODB_ADMINPASSWORD
      - MONGO_INITDB_DATABASE=$MONGODB_DATABASE
    volumes: 
      - ./mongodb:/docker-entrypoint-initdb.d
      - ./mongodb/data:/data/db
    logging:
      driver: none

  mongo-express:
    image: mongo-express
    container_name: pa-mongo-express
    ports:
      - 8082:8081
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=$MONGODB_ADMINUSERNAME
      - ME_CONFIG_MONGODB_ADMINPASSWORD=$MONGODB_ADMINPASSWORD
      - ME_CONFIG_MONGODB_SERVER=$MONGODB_SERVER
      - ME_CONFIG_MONGODB_PORT=$MONGODB_PORT
    depends_on:
      - mongo
    restart: unless-stopped
    logging:
      driver: none

  python:
    container_name: python_service_DL
    build: ./python
    ports:
      - 5001:5001
    restart: unless-stopped

  node:
    container_name: node-dev
    hostname: node-dev
    #build: ./backend # per produzione
    image: node:lts-stretch-slim
    volumes:
      - ./backend:/usr/src/app
    command: npm run start:dev --prefix /usr/src/app
    ports:
      - 3000:3000
    environment:
      - MONGO_URI=mongodb://mongo:$MONGODB_PORT/$MONGODB_DATABASE
      - MONGO_USER=$MONGODB_ADMINUSERNAME
      - MONGO_PASS=$MONGODB_ADMINPASSWORD
      - REDIS_URI=redis://redis:$REDIS_PORT
    depends_on:
      - redis
      - mongo
      - python